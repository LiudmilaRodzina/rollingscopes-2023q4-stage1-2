var d=Object.defineProperty;var l=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var i=(s,e,t)=>(l(s,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))n(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(a){if(a.ep)return;a.ep=!0;const r=t(a);fetch(a.href,r)}})();const u=()=>fetch("http://localhost:3000/garage").then(s=>{if(!s.ok)throw new Error("Failed to fetch cars");return s.json()}).catch(s=>{const e=s.message||"Unknown error occurred";return Promise.reject(e)}),c={makes:["Tesla","Ford","Chevrolet","BMW","Toyota","Honda","Mercedes-Benz","Audi","Nissan","Subaru"],models:["Model S","Mustang","Camaro","X5","Corolla","Civic","E-Class","A4","GT-R","WRX"]},g="/liudmilarodzina-JSFE2023Q4/async-race/images/car.svg";class m{constructor(){i(this,"winnersView",null);i(this,"totalCars",0);i(this,"currentPage",1);i(this,"carsPerPage",7)}setWinnersView(e){this.winnersView=e}async displayGarage(){this.currentPage=1;const e=document.createElement("div");e.classList.add("garage-container"),document.body.innerHTML="",document.body.append(e);const t=document.createElement("div");t.classList.add("header"),e.append(t),t.innerHTML=`
    <h2>Garage (${this.totalCars})</h2>
    <p>Page #${this.currentPage}</p>
  `;const n=document.createElement("button");n.id="button-winners",n.textContent="TO WINNERS",n.addEventListener("click",()=>{var o;(o=this.winnersView)==null||o.displayWinners()});const a=document.createElement("button");a.id="button-generate",a.textContent="GENERATE CARS",a.addEventListener("click",()=>{this.generateRandomCars(100)});const r=document.createElement("div");r.classList.add("main"),e.append(r),t.append(a,n),await this.displayCars()}async displayCars(){const e=await u();this.totalCars=e.length;const t=document.querySelector(".main");this.displayPaginationButtons();for(const n of e){const a=this.renderCar(n);t.append(a)}this.updateTotalCarsCount(),this.updatePageNumber(),this.updateVisibilityOfCars()}displayPaginationButtons(){const e=document.querySelector(".main"),t=document.createElement("div");t.classList.add("buttons-pagination"),e.append(t);const n=document.createElement("button");n.textContent="<< Previous Page",n.addEventListener("click",()=>{this.currentPage>1&&(this.currentPage-=1,this.updateVisibilityOfCars(),this.updatePageNumber())});const a=document.createElement("button");a.textContent="Next Page >>",a.addEventListener("click",()=>{const r=Math.ceil(this.totalCars/this.carsPerPage);this.currentPage<r&&(this.currentPage+=1,this.updateVisibilityOfCars(),this.updatePageNumber())}),t.append(n,a)}updateVisibilityOfCars(){document.querySelector(".garage-container").querySelectorAll(".car-container").forEach((n,a)=>{const r=n;r.style.display="none",a>=(this.currentPage-1)*this.carsPerPage&&a<this.currentPage*this.carsPerPage&&(r.style.display="flex")})}updatePageNumber(){const e=document.querySelector(".garage-container p");e&&(e.textContent=`Page #${this.currentPage}`)}updateTotalCarsCount(){const e=document.querySelector(".garage-container h2");e&&(e.textContent=`Garage (${this.totalCars})`)}renderCar(e){const t=document.createElement("div");return t.classList.add("car-container"),this.renderCarName(e.name,t),this.renderCarImage(e,t),t}renderCarName(e,t){const n=document.createElement("span");n.textContent=e,n.classList.add("car-name"),t.append(n)}renderCarImage(e,t){fetch(g).then(n=>n.text()).then(n=>{const a=n.replace(/fill="#323232"/g,`fill="${e.color}"`),o=new DOMParser().parseFromString(a,"image/svg+xml").documentElement;o&&t.append(o)})}async generateRandomCars(e){const t=Array.from({length:e},()=>this.generateRandomCar()),n=document.querySelector(".main"),a=t.map(o=>this.renderCar(o));n.append(...a),this.totalCars+=e,this.updateTotalCarsCount();const r=Math.ceil(this.totalCars/this.carsPerPage);this.currentPage>r&&(this.currentPage=r),this.updatePageNumber(),this.updateVisibilityOfCars()}generateRandomCar(){const e=c.makes[Math.floor(Math.random()*c.makes.length)],t=c.models[Math.floor(Math.random()*c.models.length)],n=`#${Math.floor(Math.random()*16777215).toString(16)}`;return{name:`${e} ${t}`,color:n}}}class p{constructor(e){i(this,"garageView");this.garageView=e}displayWinners(){const e=document.createElement("div");e.classList.add("winners-container"),document.body.innerHTML="",document.body.append(e),e.innerHTML=`
      <h2>Winners (0)</h2>
      <p>Page #1</p>
    `;const t=document.createElement("button");t.classList.add("button-garage"),t.textContent="TO GARAGE",t.addEventListener("click",()=>{this.garageView.displayGarage()}),e.append(t)}}class h{constructor(){const e=new m,t=new p(e);e.setWinnersView(t),e.displayGarage()}}new h;console.log(`Done:
Two Views (10 points):"Garage" and "Winners"
Garage View Content (5 points): name, the current page number, and the total number of cars
Pagination (10 points): 7 cars per page
Random Car Creation (10 points): create random cars (100 cars per click)

Total: 35
`);
